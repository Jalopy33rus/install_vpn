#!/bin/bash

set -e

### === –ù–ê–°–¢–†–û–ô–ö–ò === ###
WG_PORT=51820
SS_PORT=8388
VLESS_PORT=443
IKEV2_PORTS=(500 4500)

VPN_USER="vpnuser"
VPN_PASS="vpnpassword123"
SS_PASS="shadowsocks_pass_456"

INSTALL_DIR="/opt/unified-vpn"

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! command -v docker &>/dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose..."
    apt update
    apt install -y docker.io docker-compose
    systemctl enable --now docker
fi

mkdir -p "$INSTALL_DIR" && cd "$INSTALL_DIR"

### === Shadowsocks === ###
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Shadowsocks..."

mkdir -p shadowsocks
cat > shadowsocks/docker-compose.yml <<EOF
version: "3"
services:
  shadowsocks:
    image: shadowsocks/shadowsocks-libev
    container_name: shadowsocks
    environment:
      - SERVER_ADDR=0.0.0.0
      - SERVER_PORT=${SS_PORT}
      - PASSWORD=${SS_PASS}
      - METHOD=chacha20-ietf-poly1305
    ports:
      - "${SS_PORT}:${SS_PORT}/tcp"
      - "${SS_PORT}:${SS_PORT}/udp"
    restart: unless-stopped
EOF

### === WireGuard === ###
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WireGuard..."

mkdir -p wireguard
cat > wireguard/docker-compose.yml <<EOF
version: "3.8"
services:
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SERVERPORT=${WG_PORT}
      - PEERS=${VPN_USER}
      - ALLOWEDIPS=0.0.0.0/0
    volumes:
      - ./config:/config
      - /lib/modules:/lib/modules
    ports:
      - "${WG_PORT}:${WG_PORT}/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
EOF

### === IKEv2 === ###
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ IKEv2 (IPsec)..."

mkdir -p ikev2
cat > ikev2/docker-compose.yml <<EOF
version: "3.8"
services:
  ipsec-vpn-server:
    image: hwdsl2/ipsec-vpn-server
    container_name: ipsec-vpn
    environment:
      - VPN_IPSEC_PSK=your_ipsec_psk
      - VPN_USER=${VPN_USER}
      - VPN_PASSWORD=${VPN_PASS}
    privileged: true
    ports:
      - "500:500/udp"
      - "4500:4500/udp"
    restart: always
EOF

### === VLESS (Xray) === ###
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VLESS (XTLS-REALITY)..."

mkdir -p vless
cd vless

git clone https://github.com/myelectronix/xtls-reality-docker vless-source
cd vless-source
./install.sh

cd "$INSTALL_DIR"

### === –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö VPN-—Å–µ—Ä–≤–∏—Å–æ–≤ === ###
echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

docker compose -f shadowsocks/docker-compose.yml up -d
docker compose -f wireguard/docker-compose.yml up -d
docker compose -f ikev2/docker-compose.yml up -d

### === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW === ###
echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞ UFW..."

if ! command -v ufw &>/dev/null; then
    apt install -y ufw
fi

ufw default deny incoming
ufw default allow outgoing

ufw allow 22/tcp
ufw allow ${SS_PORT}/tcp
ufw allow ${SS_PORT}/udp
ufw allow ${WG_PORT}/udp
ufw allow ${VLESS_PORT}/tcp
for port in "${IKEV2_PORTS[@]}"; do
    ufw allow ${port}/udp
done

ufw --force enable

### === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Fail2Ban === ###
echo "üõ°Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Fail2Ban..."

apt install -y fail2ban
systemctl enable --now fail2ban

echo "‚úÖ –ì–æ—Ç–æ–≤–æ!"
echo "‚Ä¢ Shadowsocks –ø–∞—Ä–æ–ª—å: ${SS_PASS}"
echo "‚Ä¢ WireGuard peer: ${VPN_USER}"
echo "‚Ä¢ IKEv2: ${VPN_USER} / ${VPN_PASS}"
