#!/bin/bash

set -e

echo "üîê –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –¥–ª—è VPN (WireGuard / IKEv2):"
read -rp "–õ–æ–≥–∏–Ω: " VPN_USER

echo "üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è VPN (WireGuard / IKEv2):"
read -rsp "–ü–∞—Ä–æ–ª—å: " VPN_PASS
echo ""

echo "üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è Shadowsocks:"
read -rsp "–ü–∞—Ä–æ–ª—å: " SS_PASS
echo ""

### === –ù–ê–°–¢–†–û–ô–ö–ò === ###
WG_PORT=51820
SS_PORT=8388
VLESS_PORT=443
IKEV2_PORTS=(500 4500)
DNSCRYPT_PORT=5353

INSTALL_DIR="/opt/unified-vpn"

### === –£–°–¢–ê–ù–û–í–ö–ê DOCKER === ###
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! command -v docker &>/dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose..."
    apt update
    apt install -y docker.io docker-compose
    systemctl enable --now docker
fi

mkdir -p "$INSTALL_DIR" && cd "$INSTALL_DIR"

### === DNSCRYPT-PROXY === ###
echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—â–∏—â—ë–Ω–Ω–æ–≥–æ DNS (dnscrypt-proxy)..."

mkdir -p dnscrypt
cat > dnscrypt/docker-compose.yml <<EOF
version: "3"
services:
  dnscrypt-proxy:
    image: jedisct1/dnscrypt-proxy
    container_name: dnscrypt-proxy
    ports:
      - "${DNSCRYPT_PORT}:53/udp"
      - "${DNSCRYPT_PORT}:53/tcp"
    volumes:
      - ./config:/config
    restart: unless-stopped
EOF

mkdir -p dnscrypt/config
wget -qO dnscrypt/config/dnscrypt-proxy.toml https://raw.githubusercontent.com/DNSCrypt/dnscrypt-proxy/master/dnscrypt-proxy/example-dnscrypt-proxy.toml

### === Shadowsocks === ###
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Shadowsocks..."

mkdir -p shadowsocks
cat > shadowsocks/docker-compose.yml <<EOF
version: "3"
services:
  shadowsocks:
    image: shadowsocks/shadowsocks-libev
    container_name: shadowsocks
    command: ss-server -s 0.0.0.0 -p ${SS_PORT} -k ${SS_PASS} -m xchacha20-ietf-poly1305 -u --fast-open -d 127.0.0.1:${DNSCRYPT_PORT}
    ports:
      - "${SS_PORT}:${SS_PORT}/tcp"
      - "${SS_PORT}:${SS_PORT}/udp"
    restart: unless-stopped
EOF

### === WireGuard === ###
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WireGuard..."

mkdir -p wireguard
cat > wireguard/docker-compose.yml <<EOF
version: "3"
services:
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SERVERPORT=${WG_PORT}
      - PEERS=${VPN_USER}
      - ALLOWEDIPS=0.0.0.0/0
      - DNS=127.0.0.1
    volumes:
      - ./config:/config
      - /lib/modules:/lib/modules
    ports:
      - "${WG_PORT}:${WG_PORT}/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
EOF

### === IKEv2 === ###
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ IKEv2 (IPsec)..."

mkdir -p ikev2
cat > ikev2/docker-compose.yml <<EOF
version: "3"
services:
  ipsec-vpn-server:
    image: hwdsl2/ipsec-vpn-server
    container_name: ipsec-vpn
    environment:
      - VPN_IPSEC_PSK=pskvpn123
      - VPN_USER=${VPN_USER}
      - VPN_PASSWORD=${VPN_PASS}
      - VPN_DNS_NAME=127.0.0.1
    privileged: true
    ports:
      - "500:500/udp"
      - "4500:4500/udp"
    restart: always
EOF

### === VLESS (Xray-Reality) === ###
echo "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VLESS..."

mkdir -p vless && cd vless
git clone https://github.com/myelectronix/xtls-reality-docker vless-source
cd vless-source
./install.sh || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å VLESS –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ü—Ä–æ–≤–µ—Ä—å –≤—Ä—É—á–Ω—É—é."
cd "$INSTALL_DIR"

### === –ó–ê–ü–£–°–ö –í–°–ï–ì–û === ###
echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."

docker compose -f dnscrypt/docker-compose.yml up -d
docker compose -f shadowsocks/docker-compose.yml up -d
docker compose -f wireguard/docker-compose.yml up -d
docker compose -f ikev2/docker-compose.yml up -d

### === –ù–ê–°–¢–†–û–ô–ö–ê UFW === ###
echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW..."

if ! command -v ufw &>/dev/null; then
    apt install -y ufw
fi

ufw default deny incoming
ufw default allow outgoing

ufw allow 22/tcp
ufw allow ${WG_PORT}/udp
ufw allow ${SS_PORT}/tcp
ufw allow ${SS_PORT}/udp
ufw allow ${DNSCRYPT_PORT}/udp
ufw allow ${VLESS_PORT}/tcp
for port in "${IKEV2_PORTS[@]}"; do
    ufw allow ${port}/udp
done

ufw --force enable

### === –£–°–¢–ê–ù–û–í–ö–ê Fail2Ban === ###
echo "üõ°Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Fail2Ban..."

apt install -y fail2ban
systemctl enable --now fail2ban

### === –ò–ù–§–û === ###
echo -e "\n‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "‚Ä¢ Shadowsocks: –ø–æ—Ä—Ç ‚Äî ${SS_PORT}, –ø–∞—Ä–æ–ª—å ‚Äî ${SS_PASS}"
echo "‚Ä¢ WireGuard peer ‚Äî ${VPN_USER}, –ø–æ—Ä—Ç ‚Äî ${WG_PORT}"
echo "‚Ä¢ IKEv2: –ª–æ–≥–∏–Ω ‚Äî ${VPN_USER}, –ø–∞—Ä–æ–ª—å ‚Äî ${VPN_PASS}"
echo "‚Ä¢ DNS —á–µ—Ä–µ–∑ dnscrypt-proxy: 127.0.0.1:${DNSCRYPT_PORT}"
